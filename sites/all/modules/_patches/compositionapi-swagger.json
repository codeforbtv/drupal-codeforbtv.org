{
    "swagger": "2.0",
    "info": {
        "title": "Copmposition API",
        "description": "",
        "version": "1.0.0"
    },
    "host": "api.meredithcontentlicensing.com",
    "schemes": [
        "https"
    ],
    "basePath": "/v0",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/blocks": {
            "post": {
                "summary": "Create a new Block",
                "description": "Create a new Block. This requires a subset of block information (see \"BlockNew\" model) since some data can be generated by the composition service.",
                "tags": [
                    "Blocks"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "New block",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BlockNew"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "OK",
                        "headers": {
                            "Location": {
                                "description": "URL of the newly created block",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error creating block",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        },
        "/blocks/{blockId}": {
            "get": {
                "summary": "Retrieve a block",
                "description": "Retrieve a single block by id",
                "tags": [
                    "Blocks"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "blockId",
                    "description": "block id",
                    "required": true,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "block found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingBlock"
                        }
                    },
                    "404": {
                        "description": "block not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "put": {
                "summary": "Block update",
                "description": "Updates a block",
                "parameters": [{
                    "in": "path",
                    "name": "blockId",
                    "description": "block id.",
                    "required": true,
                    "type": "integer"
                }, {
                    "in": "body",
                    "name": "body",
                    "description": "new version of an block",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Block"
                    }
                }],
                "tags": [
                    "Blocks"
                ],
                "responses": {
                    "200": {
                        "description": "block details",
                        "schema": {
                            "$ref": "#/definitions/Block"
                        }
                    },
                    "403": {
                        "description": "block cannot be updated",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "block not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Block deletion",
                "description": "Deletes a block",
                "parameters": [{
                    "in": "path",
                    "name": "blockId",
                    "description": "block id.",
                    "required": true,
                    "type": "string"
                }],
                "tags": [
                    "Blocks"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "block cannot be deleted",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "block not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        },
        "/compositions": {
            "get": {
                "summary": "Retrieves all compositions",
                "description": "Retrieves a paginated list of all compositions",
                "tags": [
                    "Compositions"
                ],
                "parameters": [{
                    "in": "query",
                    "name": "page",
                    "description": "page of records",
                    "required": true,
                    "type": "integer",
                    "default": 0
                }, {
                    "in": "query",
                    "name": "per_page",
                    "description": "number of records per page",
                    "required": true,
                    "maximum": 100,
                    "type": "integer",
                    "default": 50
                }, {
                    "in": "query",
                    "name": "sort_by",
                    "description": "field to sort by",
                    "required": false,
                    "type": "string",
                    "default": "revisionId",
                    "enum": [
                        "revisionId",
                        "title"
                    ]
                }, {
                    "in": "query",
                    "name": "order",
                    "description": "sort order",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": [
                        "ASC",
                        "DSC"
                    ]
                }],
                "responses": {
                    "200": {
                        "description": "a page of compositions",
                        "schema": {
                            "title": "compositions",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/APIListResponseWrappingCompositions"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new Composition",
                "description": "Create a new Composition. This requires a subset of composition information (see \"CompositionNew\" model) since some data can be generated by the composition service.",
                "tags": [
                    "Compositions"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "New composition",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CompositionNew"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "OK",
                        "headers": {
                            "Location": {
                                "description": "URL of the newly created composition",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error creating composition",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        },
        "/compositions/{compositionId}": {
            "get": {
                "summary": "Retrieve a composition",
                "description": "Retrieve a single composition by id",
                "tags": [
                    "Compositions"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "compositionId",
                    "description": "composition id",
                    "required": true,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "composition found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingComposition"
                        }
                    },
                    "404": {
                        "description": "composition not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "put": {
                "summary": "Composition update",
                "description": "Updates a composition",
                "parameters": [{
                    "in": "path",
                    "name": "compositionId",
                    "description": "composition id.",
                    "required": true,
                    "type": "integer"
                }, {
                    "in": "body",
                    "name": "body",
                    "description": "new version of an composition",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Composition"
                    }
                }],
                "tags": [
                    "Compositions"
                ],
                "responses": {
                    "200": {
                        "description": "composition details",
                        "schema": {
                            "$ref": "#/definitions/Composition"
                        }
                    },
                    "403": {
                        "description": "composition cannot be updated",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "composition not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Composition deletion",
                "description": "Deletes a composition",
                "parameters": [{
                    "in": "path",
                    "name": "compositionId",
                    "description": "composition id.",
                    "required": true,
                    "type": "string"
                }],
                "tags": [
                    "Compositions"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "composition cannot be deleted",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "composition not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        },
        "/displays": {
            "get": {
                "summary": "Retrieves all displays",
                "description": "Retrieves a paginated list of all displays",
                "tags": [
                    "Displays"
                ],
                "parameters": [{
                    "in": "query",
                    "name": "page",
                    "description": "page of records",
                    "required": true,
                    "type": "integer",
                    "default": 0
                }, {
                    "in": "query",
                    "name": "per_page",
                    "description": "number of records per page",
                    "required": true,
                    "maximum": 100,
                    "type": "integer",
                    "default": 50
                }, {
                    "in": "query",
                    "name": "sort_by",
                    "description": "field to sort by",
                    "required": false,
                    "type": "string",
                    "default": "revisionId",
                    "enum": [
                        "revisionId",
                        "title"
                    ]
                }, {
                    "in": "query",
                    "name": "order",
                    "description": "sort order",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": [
                        "ASC",
                        "DSC"
                    ]
                }],
                "responses": {
                    "200": {
                        "description": "a page of displays",
                        "schema": {
                            "title": "displays",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/APIListResponseWrappingDisplays"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new Display",
                "description": "Create a new Display. This requires a subset of composition information (see \"DisplayNew\" model) since some data can be generated by the composition service.",
                "tags": [
                    "Displays"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "New display",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DisplayNew"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "OK",
                        "headers": {
                            "Location": {
                                "description": "URL of the newly created display",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error creating displays",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        },
        "/displays/{displayId}": {
            "get": {
                "summary": "Retrieve a display",
                "description": "Retrieve a single display by id",
                "tags": [
                    "Displays"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "displayId",
                    "description": "display id",
                    "required": true,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "display found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingDisplay"
                        }
                    },
                    "404": {
                        "description": "display not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "put": {
                "summary": "Display update",
                "description": "Updates a display",
                "parameters": [{
                    "in": "path",
                    "name": "displayId",
                    "description": "display id.",
                    "required": true,
                    "type": "integer"
                }, {
                    "in": "body",
                    "name": "body",
                    "description": "new version of an display",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Display"
                    }
                }],
                "tags": [
                    "Displays"
                ],
                "responses": {
                    "200": {
                        "description": "display details",
                        "schema": {
                            "$ref": "#/definitions/Display"
                        }
                    },
                    "403": {
                        "description": "display cannot be updated",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "display not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Display deletion",
                "description": "Deletes a display",
                "parameters": [{
                    "in": "path",
                    "name": "displayId",
                    "description": "display id.",
                    "required": true,
                    "type": "string"
                }],
                "tags": [
                    "Displays"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "display cannot be deleted",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "display not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        },
        "/batches": {
            "get": {
                "summary": "Retrieves all batches",
                "description": "Retrieves a paginated list of all batches",
                "tags": [
                    "Batches"
                ],
                "parameters": [{
                    "in": "query",
                    "name": "page",
                    "description": "page of records",
                    "required": true,
                    "type": "integer",
                    "default": 0
                }, {
                    "in": "query",
                    "name": "per_page",
                    "description": "number of records per page",
                    "required": true,
                    "maximum": 100,
                    "type": "integer",
                    "default": 50
                }, {
                    "in": "query",
                    "name": "sort_by",
                    "description": "field to sort by",
                    "required": false,
                    "type": "string",
                    "default": "revisionId",
                    "enum": [
                        "revisionId",
                        "title"
                    ]
                }, {
                    "in": "query",
                    "name": "order",
                    "description": "sort order",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": [
                        "ASC",
                        "DSC"
                    ]
                }],
                "responses": {
                    "200": {
                        "description": "a page of batches",
                        "schema": {
                            "title": "Batches",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/APIListResponseWrappingBatches"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new Batch",
                "description": "Create a new Batch. This requires a subset of composition information (see \"BatchNew\" model) since some data can be generated by the composition service.",
                "tags": [
                    "Batches"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "New batch",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BatchNew"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "OK",
                        "headers": {
                            "Location": {
                                "description": "URL of the newly created batch",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error creating batches",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        },
        "/batches/{batchId}": {
            "get": {
                "summary": "Retrieve a batch",
                "description": "Retrieve a single batch by id",
                "tags": [
                    "Batches"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "batchId",
                    "description": "batch id",
                    "required": true,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "batch found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingBatch"
                        }
                    },
                    "404": {
                        "description": "batch not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "put": {
                "summary": "Batch update",
                "description": "Updates a batch",
                "parameters": [{
                    "in": "path",
                    "name": "batchId",
                    "description": "batch id.",
                    "required": true,
                    "type": "integer"
                }, {
                    "in": "body",
                    "name": "body",
                    "description": "new version of an batch",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Batch"
                    }
                }],
                "tags": [
                    "Batches"
                ],
                "responses": {
                    "200": {
                        "description": "batch details",
                        "schema": {
                            "$ref": "#/definitions/Batch"
                        }
                    },
                    "403": {
                        "description": "batch cannot be updated",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "batch not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Batch deletion",
                "description": "Deletes a batch",
                "parameters": [{
                    "in": "path",
                    "name": "batchId",
                    "description": "batch id.",
                    "required": true,
                    "type": "string"
                }],
                "tags": [
                    "Batches"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "batch cannot be deleted",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    },
                    "404": {
                        "description": "batch not found",
                        "schema": {
                            "$ref": "#/definitions/APIEntityResponseWrappingError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "APIEntityResponseWrappingError": {
            "title": "APIEntityResponse[Error]",
            "required": [
                "status",
                "result"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "$ref": "#/definitions/Error"
                }
            }
        },
        "Error": {
            "title": "error",
            "description": "An error response object",
            "required": [
                "errorCode",
                "message"
            ],
            "properties": {
                "errorCode": {
                    "description": "A code for the API error",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "A message describing the API error",
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorField"
                    }
                }
            }
        },
        "ErrorField": {
            "title": "errorField",
            "description": "A field and it's cooresponding error",
            "required": [
                "field",
                "message"
            ],
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "ContentSrcReference": {
            "title": "ContentSrcReference",
            "properties": {
                "contentSrcId": {
                    "type": "string"
                },
                "contentSrcType": {
                    "type": "string"
                }
            }
        },
        "Image": {
            "title": "image",
            "properties": {
                "imageId": {
                    "type": "string"
                }
            }
        },
        "IdName": {
            "title": "idName",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "RecordCreationInfo": {
            "title": "recordCreationInfo",
            "required": [
                "createdAt",
                "createdBy",
                "updatedAt",
                "updatedBy"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            }
        },
        "MultiLangFields": {
            "title": "multiLangFields",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "shortTitle": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "teaser": {
                    "type": "string"
                },
                "miniTeaser": {
                    "type": "string"
                },
                "attribution": {
                    "type": "string"
                },
                "bodyShort": {
                    "type": "string"
                },
                "bodyShortHtml": {
                    "type": "string"
                },
                "bodyLong": {
                    "type": "string"
                },
                "bodyLongHtml": {
                    "type": "string"
                }
            }
        },
        "Block": {
            "title": "Block",
            "required": [
				"revisionId",
				"contentId",
                "multiLangFields",
                "active",
                "recordCreationInfo"
            ],
            "properties": {
                "revisionId": {
                    "type": "integer"
                },
                "contentId": {
                    "type": "string"
                },
				"compositionId": {
					"type": "integer"
				},
                "contentSrcReference": {
                    "$ref": "#/definitions/ContentSrcReference"
                },
                "charCount": {
                    "type": "integer"
                },
                "wordCount": {
                    "type": "integer"
                },
                "video": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/Image"
                },
                "copyright": {
                    "$ref": "#/definitions/IdName"
                },
                "multiLangFields": {
                    "$ref": "#/definitions/MultiLangFields"
                },
                "active": {
                    "type": "boolean"
                },
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "BlockNew": {
            "title": "BlockNew",
            "required": [
				"compositionId",
                "multiLangFields",
                "active",
                "recordCreationInfo"
            ],
            "properties": {
				"compositionId": {
					"type": "integer"
				},
                "contentSrcReference": {
                    "$ref": "#/definitions/ContentSrcReference"
                },
                "charCount": {
                    "type": "integer"
                },
                "wordCount": {
                    "type": "integer"
                },
                "video": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/Image"
                },
                "copyright": {
                    "$ref": "#/definitions/IdName"
                },
                "multiLangFields": {
                    "$ref": "#/definitions/MultiLangFields"
                },
                "active": {
                    "type": "boolean"
                },
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "Composition": {
            "title": "Composition",
            "required": [
                "revisionId",
                "contentId",
                "multiLangFields",
                "blocks",
				"textWorkflow",
				"imageWorkflow",
                "recordCreationInfo"
            ],
            "properties": {
                "revisionId": {
                    "type": "integer"
                },
                "contentId": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "brandId": {
                    "type": "string"
                },
                "canonicalUrl": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "multiLangFields": {
                    "$ref": "#/definitions/MultiLangFields"
                },
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Block"
                    }
                },
				"textWorkflow": {
					"type": "string",
					"enum": [ 
						"NEEDS_REVIEW",
						"READY_FOR_TOP_EDIT",
						"READY_FOR_COPY_EDIT",
						"READY_FOR_PUBLISH",
						"HOLD"
					]
				},
				"imageWorkflow": {
					"type": "string",
					"enum": [ 
						"NOT_PRESENT",
						"NEEDS_REVIEW",
						"NEEDS_WORK",
						"READY_FOR_PUBLISH",
						"HOLD"
					]
				},
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "CompositionNew": {
            "title": "CompositionNew",
            "required": [
                "multiLangFields",
				"textWorkflow",
				"imageWorkflow",
                "recordCreationInfo"
            ],
            "properties": {
                "author": {
                    "type": "string"
                },
                "brandId": {
                    "type": "string"
                },
                "canonicalUrl": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "multiLangFields": {
                    "$ref": "#/definitions/MultiLangFields"
                },
                "textWorkflow": {
					"type": "string",
					"enum": [ 
						"NEEDS_REVIEW",
						"READY_FOR_TOP_EDIT",
						"READY_FOR_COPY_EDIT",
						"READY_FOR_PUBLISH",
						"HOLD"
					]
				},
				"imageWorkflow": {
					"type": "string",
					"enum": [ 
						"NOT_PRESENT",
						"NEEDS_REVIEW",
						"NEEDS_WORK",
						"READY_FOR_PUBLISH",
						"HOLD"
					]
				},
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "Display": {
            "title": "Display",
            "required": [
                "displayId",
                "contentId",
                "displayType",
                "isDeliverableWithoutImages",
                "composition",
                "displayWorkflow",
                "recordCreationInfo"
            ],
            "properties": {
                "displayId": {
                    "type": "integer"
                },
                "contentId": {
                    "type": "string"
                },
                "displayType": {
                    "type": "string",
					"enum": [ 
						"NEWSLETTER",
						"LISTICLES"
					]
                },
                "image": {
                    "$ref": "#/definitions/Image"
                },
                "notes": {
                    "type": "string"
                },
                "isDeliverableWithoutImages": {
                    "type": "boolean"
                },
                "composition": {
                    "$ref": "#/definitions/Composition"
                },
                "displayWorkflow": {
					"type": "string",
					"enum": [ 
						 "NEEDS_REVIEW",
						 "NEEDS_WORK",
						 "READY_FOR_PUBLISH",
						 "HOLD"
					]
				},
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "DisplayNew": {
            "title": "Display",
            "required": [
                "displayType",
                "compositionId",
                "isDeliverableWithoutImages",
                "displayWorkflow",
                "recordCreationInfo"
            ],
            "properties": {
                "displayType": {
                    "type": "string",
					"enum": [ 
						"NEWSLETTER",
						"LISTICLES"
					]
                },
                "image": {
                    "$ref": "#/definitions/Image"
                },
                "notes": {
                    "type": "string"
                },
                "isDeliverableWithoutImages": {
                    "type": "boolean"
                },
                "compositionId": {
                    "type": "integer"
                },
                "displayWorkflow": {
					"type": "string",
					"enum": [ 
						 "NEEDS_REVIEW",
						 "NEEDS_WORK",
						 "READY_FOR_PUBLISH",
						 "HOLD"
					]
				},
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "BatchImageSpec": {
            "title": "BatchImageSpec",
            "required": [
            	"imageWidth",
            	"imageRatio",
            	"isPreview"
            ],
            "properties": {
                "imageWidth": {
                    "type": "integer"
                },
                "imageRatio": {
                    "type": "string"
                },
                "isPreview": {
                    "type": "boolean"
                }
            }
        },
        "Batch": {
            "title": "Batch",
            "required": [
                "name",
                "batchImageSpecs",
                "temporaryBatch",
                "readyForReview",
                "readyForDelivery",
                "active",
                "recordCreationInfo"
            ],
            "properties": {
                "batchId": {
                    "type": "integer"
                },
                "contentId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "displays": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "batchImageSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchImageSpec"
                    }
                },
                "temporaryBatch": {
                    "type": "boolean"
                },
                "readyForReview": {
                    "type": "boolean"
                },
                "readyForDelivery": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                },
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "BatchNew": {
            "title": "Batch",
            "required": [
                "name",
                "batchImageSpecs",
                "temporaryBatch",
                "readyForReview",
                "readyForDelivery",
                "active",
                "recordCreationInfo"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "displays": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "batchImageSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchImageSpec"
                    }
                },
                "temporaryBatch": {
                    "type": "boolean"
                },
                "readyForReview": {
                    "type": "boolean"
                },
                "readyForDelivery": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                },
                "recordCreationInfo": {
                    "$ref": "#/definitions/RecordCreationInfo"
                }
            }
        },
        "HypermediaLink": {
            "title": "HypermediaLink",
            "required": [
                "rel",
                "uri"
            ],
            "properties": {
                "rel": {
                    "type": "string",
                    "description": "relationship between this link and the parent resource"
                },
                "uri": {
                    "type": "string",
                    "format": "url",
                    "description": "the uri to this resource"
                }
            }
        },
        "Pagination": {
            "title": "Pagination Object",
            "type": "object",
            "properties": {
                "perPage": {
                    "type": "number",
                    "description": "How many items per resource page are requested"
                },
                "page": {
                    "type": "number",
                    "description": "Which page of a list of resources to be retrieved"
                }
            }
        },
        "APIEntityResponseWrappingBlock": {
            "title": "APIEntityResponse[Block]",
            "required": [
                "status",
                "result"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "$ref": "#/definitions/Block"
                }
            }
        },
        "APIListResponseWrappingCompositions": {
            "title": "APIListResponse[Compositions]",
            "required": [
                "status",
                "result",
                "total",
                "pagination",
                "links"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Composition"
                    }
                },
                "total": {
                    "type": "integer",
                    "default": 0,
                    "description": "The total number of resources returned, not the total number available"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                },
                "links": {
                    "title": "links",
                    "description": "links to related resources and actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HypermediaLink"
                    }
                }
            }
        },
        "APIEntityResponseWrappingComposition": {
            "title": "APIEntityResponse[Composition]",
            "required": [
                "status",
                "result"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "$ref": "#/definitions/Composition"
                }
            }
        },
        "APIListResponseWrappingDisplays": {
            "title": "APIListResponse[Displays]",
            "required": [
                "status",
                "result",
                "total",
                "pagination",
                "links"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Display"
                    }
                },
                "total": {
                    "type": "integer",
                    "default": 0,
                    "description": "The total number of resources returned, not the total number available"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                },
                "links": {
                    "title": "links",
                    "description": "links to related resources and actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HypermediaLink"
                    }
                }
            }
        },
        "APIEntityResponseWrappingDisplay": {
            "title": "APIEntityResponse[Display]",
            "required": [
                "status",
                "result"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "$ref": "#/definitions/Display"
                }
            }
        },
        "APIListResponseWrappingBatches": {
            "title": "APIListResponse[Batches]",
            "required": [
                "status",
                "result",
                "total",
                "pagination",
                "links"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Batch"
                    }
                },
                "total": {
                    "type": "integer",
                    "default": 0,
                    "description": "The total number of resources returned, not the total number available"
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                },
                "links": {
                    "title": "links",
                    "description": "links to related resources and actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HypermediaLink"
                    }
                }
            }
        },
        "APIEntityResponseWrappingBatch": {
            "title": "APIEntityResponse[Batch]",
            "required": [
                "status",
                "result"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "The HTTP Status code of the response (useful for javascript)"
                },
                "result": {
                    "$ref": "#/definitions/Batch"
                }
            }
        }
    }
}
